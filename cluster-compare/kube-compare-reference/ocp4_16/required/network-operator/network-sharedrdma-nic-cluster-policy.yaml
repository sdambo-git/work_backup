apiVersion: mellanox.com/v1alpha1
kind: NicClusterPolicy
metadata:
  name: nic-cluster-policy
spec:
  nicFeatureDiscovery:
    image: nic-feature-discovery
    repository: ghcr.io/mellanox
    version: {{ .spec.nicFeatureDiscovery.version }}
  docaTelemetryService:
    image: doca_telemetry
    repository: nvcr.io/nvidia/doca
    version: {{ .spec.docaTelemetryService.version }}
  rdmaSharedDevicePlugin:
    config: |
      {
        "configList": [
          {{- $hasIB := false }}
          {{- $hasETH := false }}
          {{- $first := true }}
          
          {{- /* Check if we can find IB interfaces in the data */ -}}
          {{- if and .spec.rdmaSharedDevicePlugin.config }}
            {{- $configData := .spec.rdmaSharedDevicePlugin.config }}
            {{- if contains $configData "ibs" }}
              {{- $hasIB = true }}
            {{- end }}
            {{- if or (contains $configData "ens") (contains $configData "enp") (contains $configData "eth") }}
              {{- $hasETH = true }}
            {{- end }}
          {{- end }}
          
          {{- if $hasIB }}
          {
            "resourceName": "rdma_shared_device_ib",
            "rdmaHcaMax": 63,
            "selectors": {
              "ifNames": ["(?<ibIfNames>.*)"]
            }
          }
          {{- $first = false }}
          {{- end }}
          
          {{- if and $hasETH (not $first) }},{{- end }}
          {{- if or $hasETH (not $hasIB) }}
          {
            "resourceName": "rdma_shared_device_eth",
            "rdmaHcaMax": {{ if and .spec.rdmaSharedDevicePlugin.config (contains .spec.rdmaSharedDevicePlugin.config "rdmaHcaMax") }}{{ regexFind "\"rdmaHcaMax\": ([0-9]+)" .spec.rdmaSharedDevicePlugin.config | regexReplaceAll "\"rdmaHcaMax\": " "" }}{{ else }}63{{ end }},
            "selectors": {
              "ifNames": ["(?<ethIfNames>.*)"]
            }
          }
          {{- end }}
        ]
      }
    image: k8s-rdma-shared-dev-plugin
    repository: ghcr.io/mellanox
    version: {{ .spec.rdmaSharedDevicePlugin.version }}
  secondaryNetwork:
    ipoib:
      image: ipoib-cni
      repository: ghcr.io/mellanox
      version: {{ .spec.secondaryNetwork.ipoib.version }}
  nvIpam:
    enableWebhook: false
    image: nvidia-k8s-ipam
    repository: ghcr.io/mellanox
    version: {{ .spec.nvIpam.version }}
  ofedDriver:
    readinessProbe:
      initialDelaySeconds: 10
      periodSeconds: 30
    forcePrecompiled: false
    terminationGracePeriodSeconds: 300
    livenessProbe:
      initialDelaySeconds: 30
      periodSeconds: 30
    upgradePolicy:
      autoUpgrade: true
      drain:
        deleteEmptyDir: true
        enable: true
        force: true
        timeoutSeconds: 300
        podSelector: ''
      maxParallelUpgrades: 1
      safeLoad: false
      waitForCompletion:
        timeoutSeconds: 0
    startupProbe:
      initialDelaySeconds: 10
      periodSeconds: 20
    image: doca-driver
    repository: nvcr.io/nvidia/mellanox
    version: {{ .spec.ofedDriver.version }}
    env:
    - name: UNLOAD_STORAGE_MODULES
      value: "true"
    - name: RESTORE_DRIVER_ON_POD_TERMINATION
      value: "true"
    - name: CREATE_IFNAMES_UDEV
      value: "true"
