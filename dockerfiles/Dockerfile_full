FROM nvidia/cuda:11.7.0-runtime-ubuntu20.04 as base

ENV NV_CUDA_LIB_VERSION "11.7.0-1"

FROM base as base-amd64

ENV NV_CUDA_CUDART_DEV_VERSION 11.7.60-1
ENV NV_NVML_DEV_VERSION 11.7.50-1
ENV NV_LIBCUSPARSE_DEV_VERSION 11.7.3.50-1
ENV NV_LIBNPP_DEV_VERSION 11.7.3.21-1
ENV NV_LIBNPP_DEV_PACKAGE libnpp-dev-11-7=${NV_LIBNPP_DEV_VERSION}

ENV NV_LIBCUBLAS_DEV_VERSION 11.10.1.25-1
ENV NV_LIBCUBLAS_DEV_PACKAGE_NAME libcublas-dev-11-7
ENV NV_LIBCUBLAS_DEV_PACKAGE ${NV_LIBCUBLAS_DEV_PACKAGE_NAME}=${NV_LIBCUBLAS_DEV_VERSION}

ENV NV_NVPROF_VERSION 11.7.50-1
ENV NV_NVPROF_DEV_PACKAGE cuda-nvprof-11-7=${NV_NVPROF_VERSION}
FROM base as base-arm64

ENV NV_CUDA_CUDART_DEV_VERSION 11.7.60-1
ENV NV_NVML_DEV_VERSION 11.7.50-1
ENV NV_LIBCUSPARSE_DEV_VERSION 11.7.3.50-1
ENV NV_LIBNPP_DEV_VERSION 11.7.3.21-1
ENV NV_LIBNPP_DEV_PACKAGE libnpp-dev-11-7=${NV_LIBNPP_DEV_VERSION}

ENV NV_LIBCUBLAS_DEV_PACKAGE_NAME libcublas-dev-11-7
ENV NV_LIBCUBLAS_DEV_VERSION 11.10.1.25-1
ENV NV_LIBCUBLAS_DEV_PACKAGE ${NV_LIBCUBLAS_DEV_PACKAGE_NAME}=${NV_LIBCUBLAS_DEV_VERSION}

ENV NV_NVPROF_VERSION 11.7.50-1
ENV NV_NVPROF_DEV_PACKAGE cuda-nvprof-11-7=${NV_NVPROF_VERSION}



ARG TARGETARCH

LABEL maintainer "NVIDIA CORPORATION cudatools@nvidia.com"

RUN apt-get update && apt-get install -y --no-install-recommends \
    libtinfo5 libncursesw5 \
    cuda-cudart-dev-11-7=${NV_CUDA_CUDART_DEV_VERSION} \
    cuda-command-line-tools-11-7=${NV_CUDA_LIB_VERSION} \
    cuda-minimal-build-11-7=${NV_CUDA_LIB_VERSION} \
    cuda-libraries-dev-11-7=${NV_CUDA_LIB_VERSION} \
    cuda-nvml-dev-11-7=${NV_NVML_DEV_VERSION} \
    ${NV_NVPROF_DEV_PACKAGE} \
    ${NV_LIBNPP_DEV_PACKAGE} \
    libcusparse-dev-11-7=${NV_LIBCUSPARSE_DEV_VERSION} \
    ${NV_LIBCUBLAS_DEV_PACKAGE} \
    && rm -rf /var/lib/apt/lists/*

# Keep apt from auto upgrading the cublas and nccl packages. See https://gitlab.com/nvidia/container-images/cuda/-/issues/88
RUN apt-mark hold ${NV_LIBCUBLAS_DEV_PACKAGE_NAME}

ENV LIBRARY_PATH /usr/local/cuda/lib64/stubs


RUN export PATH=/usr/local/cuda-11.7/bin${PATH:+:${PATH}}
RUN export LD_LIBRARY_PATH=/usr/local/cuda-11.7/lib64\
{LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

RUN env >/etc/environment  


# =========
# Ports
# ---------
EXPOSE 22
EXPOSE 8888
EXPOSE 6006

# =========
# TZData
# ---------
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Jerusalem
RUN apt-get update && apt-get install -y tzdata


# ==================================================================
# SSH
# ------------------------------------------------------------------

RUN apt-get update && apt-get install -y openssh-server
RUN mkdir /var/run/sshd
RUN echo 'root:password' | chpasswd
RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -i 's/PermitEmptyPasswords no/PermitEmptyPasswords yes/' /etc/ssh/sshd_config
RUN echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
RUN echo "PermitEmptyPasswords yes" >> /etc/ssh/sshd_config
# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd
RUN DISPLAY=`echo $DISPLAY | sed 's/^[^:]*\(.*\)/172.17.0.1\1/'`
ENV NOTVISIBLE "in users profile"
RUN echo "export VISIBLE=now" >> /etc/profile
RUN echo "X11UseLocalhost no" >> /etc/ssh/sshd_config
CMD ["/usr/sbin/sshd", "-D"]


# ==================================================================
# Python 3.6
# ------------------------------------------------------------------
#RUN apt-get update && \
#  apt-get install -y software-properties-common && \
#  add-apt-repository ppa:deadsnakes/ppa
#RUN apt-get update -y
#python3.6 python3.6-dev
RUN apt-get install -y build-essential python3 python3-pip python3-venv python3-dev
RUN echo "alias python=python3" >> ~/.bashrc
RUN echo "alias pip=pip3" >> ~/.bashrc
# update pip
RUN python3 -m pip install pip python-dateutil --upgrade && \
        python3 -m pip install wheel numpy scipy sklearn scikit-image pandas matplotlib torch keras tensorflow-gpu torchvision Cython requests opencv-python jupyter opencv-contrib-python mlflow seaborn plotly xgboost networkx pyspark tqdm pandarallel sqlalchemy dpkt hkdf pycrypto scapy selenium vertica_python sqlalchemy-vertica
#tensorflow-gpu==1.13.1

#RUN add-apt-repository universe

RUN apt-get update && apt-get install -y --no-install-recommends tzdata && apt-get install -y --no-install-recommends \
        cmake \
        git \
        wget \
        libatlas-base-dev \
        libboost-all-dev \
        libgflags-dev \
        libgoogle-glog-dev \
        libhdf5-serial-dev \
        libleveldb-dev \
        liblmdb-dev \
        libopencv-dev \
        libprotobuf-dev \
        libsnappy-dev \
        protobuf-compiler \
        nano \
        bmon \
        iputils-ping \
        net-tools \
        telnet \
        nfs-common \
        libglu1-mesa \
        libxi-dev \
        libxmu-dev \
        libglu1-mesa-dev \                          
        vim \
                                htop \
                                wireshark \
                                graphviz \
                                wxhexeditor \
                                gdmap \                               
        iputils-ping && \
    rm -rf /var/lib/apt/lists/*
#python-opencv \            





# =========
# Pycharm
# ---------

RUN apt update -y && apt install -y --no-install-recommends default-jre
RUN wget https://download.jetbrains.com/python/pycharm-community-2022.1.tar.gz
RUN tar xzf pycharm-*.tar.gz -C /opt/
RUN echo "alias pycharm=\"/opt/pycharm-community-2022.1/bin/pycharm.sh\"" >> ~/.bashrc

# =========
# jupyter
# ---------

RUN pip install jupyterlab
#RUN jupyter labextension install @jupyterlab/geojson-extension @jupyterlab/toc-extension @jupyterlab/katex-extension @jupyterlab/fasta-extension
RUN jupyter lab --generate-config
RUN jupyter notebook --generate-config

RUN python3 -m pip install jupyterthemes
RUN python3 -m pip install --upgrade jupyterthemes
RUN python3 -m pip install jupyter_contrib_nbextensions
RUN jupyter contrib nbextension install --user
# enable the Nbextensions
RUN jupyter nbextension enable contrib_nbextensions_help_item/main
RUN jupyter nbextension enable autosavetime/main
RUN jupyter nbextension enable codefolding/main
RUN jupyter nbextension enable code_font_size/code_font_size
RUN jupyter nbextension enable code_prettify/code_prettify
RUN jupyter nbextension enable collapsible_headings/main
RUN jupyter nbextension enable comment-uncomment/main
RUN jupyter nbextension enable equation-numbering/main
RUN jupyter nbextension enable execute_time/ExecuteTime 
RUN jupyter nbextension enable gist_it/main 
RUN jupyter nbextension enable hide_input/main
RUN jupyter nbextension enable spellchecker/main
RUN jupyter nbextension enable toc2/main
RUN jupyter nbextension enable toggle_all_line_numbers/main




RUN jupyter lab --allow-root --ip=0.0.0.0 / &

